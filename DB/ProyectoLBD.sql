/*Proyecto Sweet Seasons*/

--Creacion de las tablas
--Tabla de Clientes
CREATE TABLE CLIENTE (
ID_CLIENTE NUMBER(10) NOT NULL,
NOMBRE VARCHAR2(30) NOT NULL,
PRIMER_APELLIDO VARCHAR2(30) NOT NULL,
SEGUNDO_APELLIDO VARCHAR2(30) NOT NULL,
CORREO VARCHAR2(30),
NUMERO_TELEFONICO NUMBER(8),
DIRECCION VARCHAR2(30),
CONSTRAINT CLIENTE_PK PRIMARY KEY (ID_CLIENTE));

--Tabla de Ventas
CREATE TABLE VENTAS (
ID_VENTA NUMBER (10) NOT NULL,
FECHA_VENTA DATE  NOT NULL,
CANTIDAD INT NOT NULL,
PRECIO DOUBLE NOT NULL,
ID_CLIENTE NUMBER(10) NOT NULL,
ID_PRODUCTOS NUMBER(10) NOT NULL,
CONSTRAINT VENTAS_PK PRIMARY KEY (ID_VENTAS),
CONSTRAINT VENTAS_CLIENTE_FK FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
CONSTRAINT VENTAS_PRODUCTOS_FK FOREIGN KEY (ID_PRODUCTOS) REFERENCES PRODUCTOS(ID_PRODUCTOS)
);

--Inserts 
--Inserts a Clientes
Insert into CLIENTE (ID_CLIENTE,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,CORREO,NUMERO_TELEFONICO,DIRECCION) 
values (1,'Pablo','Lopez','Rodriguez','pablo.rodri@gmail.com',87349012,'Heredia Central');
INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION)
VALUES (2, 'Maria', 'Gomez', 'Fernandez', 'maria.fernandez@gmail.com', 78901234, 'San Jose');
INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION)
VALUES (3, 'Carlos', 'Martinez', 'Lopez', 'carlos.lopez@gmail.com', 65432178, 'Cartago');
INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION)
VALUES (4, 'Laura', 'Ramirez', 'Perez', 'laura.perez@gmail.com', 98761234, 'Alajuela');
INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION)
VALUES (5, 'Juan', 'Gonzalez', 'Sanchez', 'juan.sanchez@gmail.com', 12345678, 'Puntarenas');
INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION)
VALUES (6, 'Ana', 'Hernandez', 'Mendez', 'ana.mendez@gmail.com', 87654321, 'Guanacaste');
INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION)
VALUES (7, 'Diego', 'Castro', 'Jimenez', 'diego.jimenez@gmail.com', 56781234, 'Limon');
INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION)
VALUES (8, 'Sofia', 'Perez', 'Gonzalez', 'sofia.gonzalez@gmail.com', 89123456, 'San Jose');
INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION)
VALUES (9, 'Luis', 'Sanchez', 'Hernandez', 'luis.hernandez@gmail.com', 76543219, 'Heredia');
INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION)
VALUES (10, 'Monica', 'Jimenez', 'Ramirez', 'monica.ramirez@gmail.com', 91234567, 'Alajuela');

--Inserts a Ventas
INSERT INTO VENTAS (ID_VENTA,FECHA_VENTA,CANTIDAD,PRECIO,ID_CLIENTE,ID_PRODUCTOS) 
VALUES (1,'2023-10-21',2,10500.00,1,'1');
INSERT INTO VENTAS (ID_VENTA, FECHA_VENTA, CANTIDAD, PRECIO, ID_CLIENTE, ID_PRODUCTOS)
VALUES (2, '2023-10-22', 3, 7500.00, 2, 2);
INSERT INTO VENTAS (ID_VENTA, FECHA_VENTA, CANTIDAD, PRECIO, ID_CLIENTE, ID_PRODUCTOS)
VALUES (3, '2023-10-23', 1, 12000.00, 3, 3);
INSERT INTO VENTAS (ID_VENTA, FECHA_VENTA, CANTIDAD, PRECIO, ID_CLIENTE, ID_PRODUCTOS)
VALUES (4, '2023-10-24', 4, 9000.00, 4, 4);
INSERT INTO VENTAS (ID_VENTA, FECHA_VENTA, CANTIDAD, PRECIO, ID_CLIENTE, ID_PRODUCTOS)
VALUES (5, '2023-10-25', 2, 8000.00, 5, 5);
INSERT INTO VENTAS (ID_VENTA, FECHA_VENTA, CANTIDAD, PRECIO, ID_CLIENTE, ID_PRODUCTOS)
VALUES (6, '2023-10-26', 3, 9500.00, 6, 1);
INSERT INTO VENTAS (ID_VENTA, FECHA_VENTA, CANTIDAD, PRECIO, ID_CLIENTE, ID_PRODUCTOS)
VALUES (7, '2023-10-27', 1, 11000.00, 7, 2);
INSERT INTO VENTAS (ID_VENTA, FECHA_VENTA, CANTIDAD, PRECIO, ID_CLIENTE, ID_PRODUCTOS)
VALUES (8, '2023-10-28', 5, 8500.00, 8, 3);
INSERT INTO VENTAS (ID_VENTA, FECHA_VENTA, CANTIDAD, PRECIO, ID_CLIENTE, ID_PRODUCTOS)
VALUES (9, '2023-10-29', 2, 7500.00, 9, 4);
INSERT INTO VENTAS (ID_VENTA, FECHA_VENTA, CANTIDAD, PRECIO, ID_CLIENTE, ID_PRODUCTOS)
VALUES (10, '2023-10-30', 3, 10000.00, 10, 5);

--Procedure para ingresar datos
--Clientes
CREATE OR REPLACE PROCEDURE INSERT_CLIENTES (
    IDE CLIENTE.ID_CLIENTE%TYPE,
    NOM CLIENTE.NOMBRE%TYPE,
    PRIMER_AP CLIENTE.PRIMER_APELLIDO%TYPE,
    SEGUNDO_AP CLIENTE.SEGUNDO_APELLIDO%TYPE,
    COR CLIENTE.CORREO%TYPE,
    NUMERO CLIENTE.NUMERO_TELEFONICO%TYPE,
    DIREC CLIENTE.DIRECCION%TYPE)
AS
BEGIN 
    INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO,
    NUMERO_TELEFONICO, DIRECCION)
    VALUES (IDE, NOM, PRIMER_AP, SEGUNDO_AP, COR, NUMERO, DIREC);
    COMMIT;
END;
    
EXEC INSERT_CLIENTES (10, 'Monica', 'Jimenez', 'Ramirez', 'monica.ramirez@gmail.com', 91234567, 'Alajuela');

--Ventas
CREATE OR REPLACE PROCEDURE INSERT_VENTAS (
    IDE VENTAS.ID_VENTA%TYPE,
    FECHA VENTAS.FECHA_VENTA%TYPE,
    CANT VENTAS.CANTIDAD%TYPE,
    PREC VENTAS.PRECIO%TYPE,
    ID_C VENTAS.ID_CLIENTE%TYPE,
    ID_P VENTAS.ID_PRODUCTOS%TYPE)
AS
BEGIN 
    INSERT INTO VENTAS (ID_VENTA,FECHA_VENTA,CANTIDAD,PRECIO,ID_CLIENTE,ID_PRODUCTOS)
    VALUES (IDE, FECHA, CANT, PREC, ID_C, ID_P);
    COMMIT;
END;
    
EXEC INSERT_VENTAS (10, '2023-10-30', 3, 10000.00, 10, 5);

--PROCEDURE PARA ACTUALIZAR UN DATO
--Clientes
CREATE OR REPLACE PROCEDURE UPDATE_CLIENTES (
    IDE CLIENTE.ID_CLIENTE%TYPE,
    NOM CLIENTE.NOMBRE%TYPE,
    PRIMER_AP CLIENTE.PRIMER_APELLIDO%TYPE,
    SEGUNDO_AP CLIENTE.SEGUNDO_APELLIDO%TYPE,
    COR CLIENTE.CORREO%TYPE,
    NUMERO CLIENTE.NUMERO_TELEFONICO%TYPE,
    DIREC CLIENTE.DIRECCION%TYPE)
AS
BEGIN 
    UPDATE CLIENTE 
    SET NOMBRE = NOM,
        PRIMER_APELLIDO = PRIMER_AP,
        SEGUNDO_APELLIDO = SEGUNDO_AP,
        CORREO = COR,
        NUMERO_TELEFONICO = NUMERO,
        DIRECCION=DIREC
    WHERE ID_CLIENTE = IDE;
END;
    
EXEC INSERT_CLIENTES (10, 'Monica', 'Jimenez', 'Ramirez', 'monica.ramirez@gmail.com', 91234567, 'Alajuela');

--VIEW PARA READ
--CLIENTES
CREATE VIEW READ_CLIENTE AS
SELECT NOMBRE,PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, NUMERO_TELEFONICO, DIRECCION
FROM CLIENTE
ORDER BY NOMBRE;

--VENTAS
CREATE VIEW READ_VENTAS AS
SELECT FECHA_VENTA,CANTIDAD,PRECIO,ID_CLIENTE,ID_PRODUCTOS
FROM VENTAS
ORDER BY FECHA_VENTA;

-- FUNCTION PARA ELIMINAR DATOS DE UNA TABLA
--CLIENTES
CREATE OR REPLACE FUNCTION DELETE_CLIENTES (IDE VARCHAR2) RETURN VARCHAR2
IS
BEGIN
    DELETE FROM CLIENTE
    WHERE ID_CLIENTE = IDE;
    RETURN 'Datos eliminados correctamente';
END;

--Para ejecutarlo
CREATE OR REPLACE PROCEDURE Ej_Func_Client(IDE NUMBER)
IS
    resultado VARCHAR2(100);
BEGIN
    resultado := DELETE_CLIENTES(IDE); -- Llama a la función DELETE_CLIENTES
    DBMS_OUTPUT.PUT_LINE(resultado);
END;

EXEC Ej_Func_Client(10);

--VENTAS
CREATE OR REPLACE FUNCTION DELETE_VENTAS (IDE VARCHAR2) RETURN VARCHAR2
IS
BEGIN
    DELETE FROM VENTAS
    WHERE ID_VENTA = IDE;
    RETURN 'Datos eliminados correctamente';
END;


--Para ejecutarlo
CREATE OR REPLACE PROCEDURE Ej_Func_Vent(IDE NUMBER)
IS
    resultado VARCHAR2(100);
BEGIN
    resultado := DELETE_VENTAS(IDE); -- Llama a la función DELETE_VENTAS
    DBMS_OUTPUT.PUT_LINE(resultado);
END;

EXEC Ej_Func_Vent(10);

--CURSORES
--funcion para traer el nombre completo del cliente con el total que compro en una venta
DECLARE 
    cur_clie_to SYS_REFCURSOR;
    NOM CLIENTE.NOMBRE%TYPE;
    PRIMER_AP CLIENTE.PRIMER_APELLIDO%TYPE;
    SEGUNDO_AP CLIENTE.SEGUNDO_APELLIDO%TYPE;
    TOTAL_VEN VENTAS.TOTAL%TYPE;
    FECHA VENTAS.FECHA_VENTA%TYPE;
BEGIN 
    OPEN cur_clie_to FOR SELECT c.NOMBRE, c.PRIMER_APELLIDO, c.SEGUNDO_APELLIDO, v.FECHA_VENTA , v.TOTAL 
    FROM CLIENTE c
    INNER JOIN VENTAS v  ON c.ID_CLIENTE=v.ID_CLIENTE
    WHERE v.ID_VENTA = 9;
    
    FETCH cur_var INTO NOM, PRIMER_AP, SEGUNDO_AP, FECHA, TOTAL_VEN;
    CLOSE cur_var;
    
     DBMS_OUTPUT.PUT_LINE( NOM || ' ' || PRIMER_AP || ' ' || SEGUNDO_AP || 
     ' compro en total ' || TOTAL_VEN || ' compro en total ' || FECHA);
END;

--funcion para traer el nombre  del producto con el total que compro en una venta
DECLARE 
    cur_pro_ven SYS_REFCURSOR;
    NOM PRODUCTOS.NOMBRE%TYPE;
    FECHA VENTAS.FECHA_VENTA%TYPE;
    CANT VENTAS.CANTIDAD%TYPE;
    TOTAL_VEN VENTAS.TOTAL%TYPE;
BEGIN 
    OPEN cur_pro_ven FOR SELECT p.NOMBRE, v.CANTIDAD, v.FECHA_VENTA, v.TOTAL 
    FROM PRODUCTO p
    INNER JOIN VENTAS v  ON p.ID_PRODUCTOS=v.ID_PRODUCTOS
    WHERE v.ID_VENTA = 9;
    
    FETCH cur_var INTO NOM, CANT, FECHA, TOTAL_VEN;
    CLOSE cur_var;
    
     DBMS_OUTPUT.PUT_LINE( 'Se compro '|| CANT || ' '  || NOM || ' en la fecha ' 
     || FECHA || ' con un total ' || TOTAL_VEN);
END;